name: Test
on:
  push: ~
  pull_request: ~

jobs:
  perl-images:
    runs-on: ubuntu-latest
    name: Calculate Perl Images
    outputs:
      images: ${{ toJSON(fromJSON(steps.perl-images.outputs.result).images) }}
      last-image: ${{ fromJSON(steps.perl-images.outputs.result).last-image }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract perl dependecy
        id: prereqs
        uses: perl-actions/get-prereqs@v1
        with:
          sources: Makefile.PL
          phases: configure
      - id: perl-versions
        uses: perl-actions/perl-versions@v1
        with:
          since-perl: ${{ steps.prereqs.outputs.perl }}
          with-devel: true
      - id: perl-images
        uses: actions/github-script@v7
        env:
          PERL_VERSIONS: ${{ toJSON(steps.perl-versions.outputs.versions) }}
        with:
          script: |
            const perl_versions = JSON.parse(process.env.PERL_VERSIONS);
            const images = perl_versions.map((v) => {
              const res = v.match(/^5\.(\d+)$/);
              let suffix = '';
              if (res) {
                const [, minor] = res;
                if (minor < 26) {
                  suffix = '-buster';
                }
              }
              return `perl:${v}${suffix}`;
            });
            return {
              images,
              'last-image': images[images.length - 1],
            };

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.perl-cpm
          key: cpm-${{ runner.os }}
      - name: Setup local::lib
        run: |
          echo "$RUNNER_TEMP/perl5/bin" >> "$GITHUB_PATH"
          echo "PERL5LIB=$RUNNER_TEMP/perl5/lib/perl5:$PERL5LIB" >> "$GITHUB_ENV"
          echo "PERL_MB_OPT=--install_base $RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
          echo "PERL_MM_OPT=INSTALL_BASE=$RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
      - name: Build
        id: build
        run: |
          perl Makefile.PL
          make manifest
          make distdir
          echo build="$(grep '^DISTVNAME = ' Makefile | cut -c13-)" >> "$GITHUB_OUTPUT"
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.build }}
          path: ${{ steps.build.outputs.build }}
          include-hidden-files: true
    outputs:
      name: ${{ steps.build.outputs.build }}

  test:
    needs:
      - perl-images
      - build

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.perl-images.outputs.images) }}

    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}

    env:
      AUTOMATED_TESTING: 1
      PERL_USE_UNSAFE_INC: 0

    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.name }}
      - uses: actions/cache@v4
        with:
          path: ~/.perl-cpm
          key: cpm-${{ matrix.image }}
      - name: Setup local::lib
        run: |
          echo "$RUNNER_TEMP/perl5/bin" >> "$GITHUB_PATH"
          echo "PERL5LIB=$RUNNER_TEMP/perl5/lib/perl5:$PERL5LIB" >> "$GITHUB_ENV"
          echo "PERL_MB_OPT=--install_base $RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
          echo "PERL_MM_OPT=INSTALL_BASE=$RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
      - name: Extract configure dependecies
        id: configure
        uses: perl-actions/get-prereqs@v1
        with:
          phases: configure
      - name: Install configure deps
        uses: perl-actions/install-with-cpm@v1
        with:
          sudo: false
          install: ${{ steps.configure.outputs.prereqs }}
      - name: Run Makefile.PL
        run: perl Makefile.PL
      - name: Extract dependecies
        id: prereqs
        uses: perl-actions/get-prereqs@v1
        with:
          phases: build test runtime
          relationships: requires recommends suggests
      - name: Install deps
        uses: perl-actions/install-with-cpm@v1
        with:
          sudo: false
          install: ${{ steps.prereqs.outputs.prereqs }}
      - name: Run the tests
        run: make test
        env:
          AUTHOR_TESTING: 1

  test-xt:
    needs:
      - perl-images
      - build

    runs-on: ubuntu-latest
    container:
      image: ${{ needs.perl-images.outputs.last-image }}

    env:
      AUTOMATED_TESTING: 1

    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.name }}
      - uses: actions/cache@v4
        with:
          path: ~/.perl-cpm
          key: cpm-perl:5.36
      - name: Setup local::lib
        run: |
          echo "$RUNNER_TEMP/perl5/bin" >> "$GITHUB_PATH"
          echo "PERL5LIB=$RUNNER_TEMP/perl5/lib/perl5:$PERL5LIB" >> "$GITHUB_ENV"
          echo "PERL_MB_OPT=--install_base $RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
          echo "PERL_MM_OPT=INSTALL_BASE=$RUNNER_TEMP/perl5" >> "$GITHUB_ENV"
      - name: Extract configure dependecies
        id: configure
        uses: perl-actions/get-prereqs@v1
        with:
          phases: configure
      - name: Install configure deps
        uses: perl-actions/install-with-cpm@v1
        with:
          sudo: false
          install: ${{ steps.configure.outputs.prereqs }}
      - name: Run Makefile.PL
        run: perl Makefile.PL
      - name: Extract dependecies
        id: prereqs
        uses: perl-actions/get-prereqs@v1
        with:
          phases: build test runtime develop
          relationships: requires recommends suggests
      - name: Install deps
        uses: perl-actions/install-with-cpm@v1
        with:
          sudo: false
          install: ${{ steps.prereqs.outputs.prereqs }}
      - name: Run the xt tests
        if: hashFiles('xt/*.t')
        run: prove -l xt
        env:
          AUTHOR_TESTING: 1
      - name: Run the xt/author tests
        if: hashFiles('xt/author/**/*.t')
        run: prove -lr xt/author
        env:
          AUTHOR_TESTING: 1

